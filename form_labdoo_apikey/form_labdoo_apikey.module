<?php
/*
 *  Labdoo API
    Copyright (C) 2012  Labdoo team

    This program is free software: you can redistribute it and/or modify
    it under the terms of the GNU General Public License as published by
    the Free Software Foundation, either version 3 of the License, or
    (at your option) any later version.

    This program is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU General Public License for more details.

    You should have received a copy of the GNU General Public License
    along with this program.  If not, see <http://www.gnu.org/licenses/>.
 * 
 */

function form_labdoo_apikey_menu() {
	
  $items['labdoo_api/form_labdoo/form_labdoo_apikey'] = array(
    'title' => 'Laptop form api',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('laptop form api'),
    'access arguments' => array('laptop form api'),
    'access callback' => 'user_access'
  );

  return $items;
}

function form_labdoo_apikey_perm(){
	return array('laptop form api');
}


function form_labdoo_apikey($form_state) {

if (user_access('laptop form api')){
	  // delete stuff
  $form['description'] = array(
    '#type' => 'item',
    '#title' => t('Labdoo API - Laptop API Key form'),
  );


  $form['api_key'] = array(
    '#type' => 'fieldset',
    '#title' => t('Name'),
    '#collapsible' => TRUE,
    '#collapsed' => FALSE,
  );
	
	
	/**
	 * TODO to test if it did not appear the email field
	 */
	global $user;
	if ($user->uid == "1") {
		$form['api_key']['email'] = array(
	    '#type' => 'textfield',
	    '#title' => t('Email'),
	    '#required' => TRUE,
	   # '#default_value' => "First name", // added default value.
	    '#size' => 64, // added
	    '#maxlength' => 64, // added
	  );
	} 
	  
	    $form['api_key']['submit'] = array(
	    '#type' => 'submit',
	    '#value' => 'Submit',
	  );
  
	    $form['api_key']['clear'] = array(
	    '#type' => 'submit',
	    '#value' => 'Disable API key',
	    '#validate' => array('form_labdoo_apikey_clear'),
	  );

	  return $form;

	} else {
	  drupal_access_denied();
	}
}



function form_labdoo_apikey_clear($form, &$form_state) {

	if (isset($form_state['values']['email'])) {
		$mail = $form_state['values']['email'];
	} else {
		$mail = $user->mail;
	}	
	
	
	$countRows = db_result(db_query('SELECT COUNT(*) FROM api_key where email like \'%s\'',$mail));
	if ($countRows == 0) {
			drupal_set_message(t('There is not any api key to remove for the email @email',array("@email"=>$mail)));
	} else {
			db_query('DELETE FROM api_key where email like \'%s\' ',$mail);
			
		  $countRows = db_result(db_query('SELECT COUNT(*) FROM api_key where email like \'%s\'',$mail));
			drupal_set_message(t('The api key for the email @email was removed (status @status)!!',array("@email"=>$mail, "@status"=>$countRows)));
	}
	
  $form_state['rebuild'] = TRUE;
}

function form_labdoo_apikey_submit($form, &$form_state) {
 	global $user;
 
	drupal_set_message(t('The form has been submitted'));
	if (isset($form_state['values']['email'])) {
		$mail = $form_state['values']['email'];
	} else {
		$mail = $user->mail;
	}
	
	$apiKey = generateAPIKEY();

	$countRows = db_result(db_query('SELECT COUNT(*) FROM api_key where email like \'%s\'',$mail));
	if ($countRows == 1) {
		drupal_set_message(t('Deleting old API KEY'));
		db_query('DELETE FROM api_key where email like \'%s\' ',$mail);
	}
	drupal_set_message(t('Saving your new API KEY'));
	db_query('INSERT INTO api_key VALUES (MD5(\'%s\'),\'%s\',\'%s\',%d)',$apiKey,$user->name,$mail,$user->uid);				

	drupal_set_message(t('<h2> API KEY: @key for @mail</h2>',array('@key' => $apiKey,'@mail' => $mail)));
	

	/*drupal_set_message(t('List of form\'s NIDs ')); */
}

function generateAPIKEY() {
	return md5(uniqid(rand(), true));
}



